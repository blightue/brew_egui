name: Release

on:
  push:
    branches:
      - master

jobs:
  build_and_release:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(grep '^version =' Cargo.toml | head -1 | cut -d '"' -f 2)"

      - name: Get latest release
        id: get_latest_release
        run: |
          LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name)
          echo "::set-output name=version::${LATEST_RELEASE}"

      - name: Check version
        run: |
          if [ "${{ steps.get_version.outputs.version }}" = "${{ steps.get_latest_release.outputs.version }}" ]; then
            echo "Version has not been updated in Cargo.toml"
            exit 1
          fi

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add targets
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-bundle
        run: cargo install cargo-bundle

      - name: Build for x86_64
        run: cargo bundle --release --target x86_64-apple-darwin

      - name: Build for aarch64
        run: cargo bundle --release --target aarch64-apple-darwin

      - name: Archive production artifacts
        run: |
          zip -r EGUI_Brew_x86_64.zip ./target/x86_64-apple-darwin/release/bundle/osx/EGUI_Brew.app
          zip -r EGUI_Brew_aarch64.zip ./target/aarch64-apple-darwin/release/bundle/osx/EGUI_Brew.app

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./EGUI_Brew_x86_64.zip
          asset_name: EGUI_Brew_x86_64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset aarch64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./EGUI_Brew_aarch64.zip
          asset_name: EGUI_Brew_aarch64.zip
          asset_content_type: application/zip